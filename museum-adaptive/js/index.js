window.addEventListener('DOMContentLoaded', () => {
  console.log(`
  –í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞ - 159 –±–∞–ª–ª–æ–≤ 
  –û—Ç–∑—ã–≤ –ø–æ –ø—É–Ω–∫—Ç–∞–º –¢–ó:

  –ß–∞—Å—Ç–∏—á–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ:
  45) –∫–Ω–æ–ø–∫–µ "Book" –≤ —Ñ–æ—Ä–º–µ –ø–æ–∫—É–ø–∫–∏ –±–∏–ª–µ—Ç–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω ripple-—ç—Ñ—Ñ–µ–∫—Ç. –î–µ–º–æ: https://50projects50days.com/projects/button-ripple-effect/ 
  feedback: –î–æ–±–∞–≤–ª–µ–Ω –Ω–µ –∫ —Ç–æ–π –∫–Ω–æ–ø–∫–µüòÖ (Buy Now)


  –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã:
  1) –í—ë—Ä—Å—Ç–∫–∞ –≤–∞–ª–∏–¥–Ω–∞—è. –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –≤—ë—Ä—Å—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–µ—Ä–≤–∏—Å https://validator.w3.org/. –í–∞–ª–∏–¥–Ω–æ–π –≤—ë—Ä—Å—Ç–∫–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞–¥–ø–∏—Å—å "Document checking completed. No errors or warnings to show." 
  
  2) header, main, footer 
  
  3) —Å–µ–º—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤ section (–ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–µ–∫—Ü–∏–π) 
  
  4) —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ h1 
  
  5) —Å–µ–º—å –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ h2 (–ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–µ–∫—Ü–∏–π) 
  
  6) —à–µ—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ h3 (–ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∫–∞—Ä—Ç–æ—á–µ–∫) 
  
  7) –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ nav (–æ—Å–Ω–æ–≤–Ω–∞—è –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏) 
  
  8) —Ç—Ä–∏ —Å–ø–∏—Å–∫–∞ ul > li > a (–æ—Å–Ω–æ–≤–Ω–∞—è –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü—Å–µ—Ç–∏) 
  
  9) —Ç—Ä–∏–Ω–∞–¥—Ü–∞—Ç—å –∫–Ω–æ–ø–æ–∫ button (—á–µ—Ç—ã—Ä–µ –∏–∑ –Ω–∏—Ö –≤ —Å–µ–∫—Ü–∏–∏ Video, –ø—è—Ç—å –≤ —Å–µ–∫—Ü–∏–∏ Tickets, –ø–æ –¥–≤–µ - —Å—Ç—Ä–µ–ª–∫–∏ —Å–ª–∞–π–¥–µ—Ä–∞ –∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞) 
  
  10) —Ç—Ä–∏ —Ç–µ–≥–∞ input type="radio" (–≤ —Å–µ–∫—Ü–∏–∏ Tickets) 
  
  11) –¥–≤–∞ —Ç–µ–≥–∞ input type="number"(–≤ —Å–µ–∫—Ü–∏–∏ Tickets) 
  
  12) –¥–≤–∞ —Ç–µ–≥–∞ input type="range" (–≥—Ä–æ–º–∫–æ—Å—å –∏ –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä –≤–∏–¥–µ–æ) 
  
  13) –¥–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ img —É–∫–∞–∑–∞–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç alt 
  
  14) –±–ª–æ–∫ header 
  
  15) —Å–µ–∫—Ü–∏—è Welcome 
  
  16) —Å–µ–∫—Ü–∏—è Visiting 
  
  17) —Å–µ–∫—Ü–∏—è Explore 
  
  18) —Å–µ–∫—Ü–∏—è Video 
  
  19) —Å–µ–∫—Ü–∏—è Gallery 
  
  20) —Å–µ–∫—Ü–∏—è Tickets 
  
  21) —Å–µ–∫—Ü–∏—è Contacts 
  
  22) –±–ª–æ–∫ footer 
  
  23) —Ñ–æ—Ä–º–∞ –ø–ª–∞–≤–Ω–æ –≤—ã–¥–≤–∏–≥–∞–µ—Ç—Å—è —Å–ª–µ–≤–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∏ –ø–ª–∞–≤–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –Ω–∞–∑–∞–¥ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏. –í –æ—Ç–∫—Ä—ã—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–¥ —Ñ–æ—Ä–º–æ–π –µ—Å—Ç—å –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π overlay, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–Ω–∏–º–∞–µ—Ç –≤–µ—Å—å —ç–∫—Ä–∞–Ω. –§–æ—Ä–º–∞ –∏ overlay –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞—é—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π 
  
  24) —Ñ–æ—Ä–º–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ –∫–Ω–æ–ø–∫–µ Buy Now –≤ —Å–µ–∫—Ü–∏–∏ Tickets –∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∫–ª–∏–∫–æ–º –ø–æ –∏–∫–æ–Ω–∫–µ —Å –∫—Ä–µ—Å—Ç–∏–∫–æ–º –≤ –≤–µ—Ä—Ö–Ω–µ–º –ø—Ä–∞–≤–æ–º —É–≥–ª—É –∏–ª–∏ –∫–ª–∏–∫–æ–º –ø–æ overlay 
  
  25) –ø—Ä–∏ –≤—ë—Ä—Å—Ç–∫–µ —Ñ–æ—Ä–º—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã: form, input type="date", input type="time", input type="text", input type="email", input type="tel", input type="number", select 
  
  26) –≤—ë—Ä—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –º–∞–∫–µ—Ç—É 
  
  27) –¥–æ–±–∞–≤–ª–µ–Ω favicon 
  
  28) –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Å–µ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ñ–ª–µ–∫—Å—ã –∏–ª–∏ –≥—Ä–∏–¥—ã 
  
  29) –ø—Ä–∏ —É–º–µ–Ω—å—à–µ–Ω–∏–∏ –º–∞—Å—à—Ç–∞–±–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±—Ä–∞—É–∑–µ—Ä–∞ –≤—ë—Ä—Å—Ç–∫–∞ —Ä–∞–∑–º–µ—â–∞–µ—Ç—Å—è –ø–æ —Ü–µ–Ω—Ç—Ä—É, –∞ –Ω–µ —Å–¥–≤–∏–≥–∞–µ—Ç—Å—è –≤ —Å—Ç–æ—Ä–æ–Ω—É 
  
  30) —Ñ–æ–Ω–æ–≤—ã–π —Ü–≤–µ—Ç –∫–∞–∂–¥–æ–≥–æ –±–ª–æ–∫–∞ –∏ —Å–µ–∫—Ü–∏–∏ —Ç—è–Ω–µ—Ç—Å—è –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã 
  
  31) –∏–∫–æ–Ω–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ .svg. SVG –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –ª—é–±—ã–º —Å–ø–æ—Å–æ–±–æ–º. –û–±—Ä–∞—â–∞–µ–º –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ñ–æ—Ä–º–∞—Ç, –∞ –Ω–µ –Ω–∞ —Å–ø–æ—Å–æ–± –¥–æ–±–∞–≤–ª–µ–Ω–∏—è 
  
  32) —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –±—É–∫–≤–∞–º–∏, —Ç–∞–º, –≥–¥–µ —ç—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ –º–∞–∫–µ—Ç—É, —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç—Å—è css-—Å–≤–æ–π—Å—Ç–≤–æ–º letter-spacing 
  
  33) –ø–µ—Ä–µ–∫–ª—é—á–∞—é—Ç—Å—è —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∏ –≤ –±–ª–æ–∫–µ Tickets, –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ 
  
  34) –≤ –±–ª–æ–∫–µ Contacts –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–Ω—ã —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ—á—Ç—É mailto –∏ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω tel 
  
  35) –≤ —Ñ—É—Ç–µ—Ä–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü—Å–µ—Ç–∏. –ö—Ä—É–≥–ª–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ –≤–æ–∫—Ä—É–≥ –∏–∫–æ–Ω–æ–∫ —Å–æ—Ü—Å–µ—Ç–µ–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø—Ä–∏ –ø–æ–º–æ—â–∏ css 
  
  36) –ø–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –ø–æ —è–∫–æ—Ä—è–º 
  
  37) –ø–∞—Ä–∞–ª–ª–∞–∫—Å 
  
  38) –ø—Ä–∏ –∫–ª–∏–∫–∞–º –ø–æ –∫–Ω–æ–ø–∫–µ Discover the Louvre –∏ –∫–∞—Ä—Ç–æ—á–∫–∞–º —Å–µ–∫—Ü–∏–∏ Visiting –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–µ –ø–∞–Ω–æ—Ä–∞–º—ã Google Street View –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞ –ø—Ä–∏ –ø–æ–º–æ—â–∏ iframe 
  
  39) –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –∏ –∫–ª–∏–∫–µ. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –Ω–µ —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –∫—É—Ä—Å–æ—Ä–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –ø–æ–º–æ—â–∏ —Å–≤–æ–π—Å—Ç–≤–∞ cursor: pointer, –Ω–æ –∏ –¥—Ä—É–≥–∏–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã ‚Äì –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞ –∏–ª–∏ —à—Ä–∏—Ñ—Ç–∞, –ø–æ—è–≤–ª–µ–Ω–∏–µ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏—è –∏ —Ç.–¥. –ï—Å–ª–∏ –≤ –º–∞–∫–µ—Ç–µ —É–∫–∞–∑–∞–Ω—ã —Å—Ç–∏–ª–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –∏ –∫–ª–∏–∫–µ, –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞ —É–∫–∞–∑—ã–≤–∞–µ–º —ç—Ç–∏ —Å—Ç–∏–ª–∏, –µ—Å–ª–∏ –≤ –º–∞–∫–µ—Ç–µ —Å—Ç–∏–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã, —Ä–µ–∞–ª–∏–∑—É–µ—Ç–µ –∏—Ö –ø–æ —Å–≤–æ–µ–º—É —É—Å–º–æ—Ç—Ä–µ–Ω–∏—é, —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É—è—Å—å –æ–±—â–∏–º —Å—Ç–∏–ª–µ–º –º–∞–∫–µ—Ç–∞ 
  
  40) –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: –ø–ª–∞–≤–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –∏ –∫–ª–∏–∫–µ –Ω–µ –≤–ª–∏—è—é—â–µ–µ –Ω–∞ —Å–æ—Å–µ–¥–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã 
  
  41) –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ —Å–µ–∫—Ü–∏–∏ Visiting –ø—Ä–µ–¥—É—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –ø–ª–∞–≤–Ω–æ–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–Ω–∏–µ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É –∫–∞—Ä—Ç–æ—á–∫–∏ 
  
  42) –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –∏–∫–æ–Ω–æ–∫ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π –≤ —Ñ—É—Ç–µ—Ä–µ –ø—Ä–µ–¥—É—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –∏–∫–æ–Ω–∫–∏ –∏ –∫—Ä—É–≥–ª–æ–π –≥—Ä–∞–Ω–∏—Ü—ã –≤–æ–∫—Ä—É–≥ –∏–∫–æ–Ω–∫–∏ –Ω–∞ –∑–æ–ª–æ—Ç–∏—Å—Ç—ã–π 
  
  43) –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–≤–∏–≥–∞—Ç—å –ø–æ–ª–∑—É–Ω–∫–∏ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –≤–∏–¥–µ–æ, –ø—Ä–∏ —ç—Ç–æ–º —Ü–≤–µ—Ç —à–∫–∞–ª—ã –¥–æ –∏ –ø–æ—Å–ª–µ –ø–æ–ª–∑—É–Ω–∫–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –º–∞–∫–µ—Ç—É 
  
  44) –∫–ª–∏–∫–∞–º–∏ –ø–æ –∫–Ω–æ–ø–∫–∞–º + –∏ - –≤ —Å–µ–∫—Ü–∏–∏ Tiskets –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤ Basic –∏ Senior –æ—Ç 0 –¥–æ 20 
  
  46) –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏) —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ä—Ç–∏–Ω—ã –≤ –±–ª–æ–∫–µ Galery –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ —Ä–∞–Ω–¥–æ–º–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ 
 
  `);

  (function slider() {
    let offset = 0;
    let slideIndex = 1;

    const slides = document.querySelectorAll('.slider__slide'),
      prev = document.querySelector('.slider__prev'),
      next = document.querySelector('.slider__next'),
      total = document.querySelector('#total'),
      current = document.querySelector('#current'),
      slidesWrapper = document.querySelector('.slider__wrapper'),
      width = window.getComputedStyle(slidesWrapper).width,
      slidesField = document.querySelector('.slider__inner'),
      indicators = document.querySelector('.slider__carousel-indicators');

    if (slides.length < 10) {
      total.textContent = `0${slides.length}`;
      current.textContent = `0${slideIndex}`;
    } else {
      total.textContent = slides.length;
      current.textContent = slideIndex;
    }

    slidesField.style.width = 100 * slides.length + '%';
    slidesField.style.display = 'flex';
    slidesField.style.transition = '0.5s all';

    slidesWrapper.style.overflow = 'hidden';

    slides.forEach(slide => {
      slide.style.width = width;
    });

    const dots = [];
    for (let i = 0; i < slides.length; i++) {
      const dot = document.createElement('li');
      dot.setAttribute('data-slide-to', i + 1);
      dot.classList.add('slider__carousel-dot');

      if (i == 0) {
        dot.style.backgroundColor = '#D2B183';
      }
      indicators.append(dot);
      dots.push(dot);
    }

    next.addEventListener('click', () => {
      if (offset == +width.replace(/\D/g, '') * (slides.length - 1)) {
        offset = 0;
      } else {
        offset += +width.slice(0, width.length - 2);
      }

      slidesField.style.transform = `translateX(-${offset}px)`;

      if (slideIndex == slides.length) {
        slideIndex = 1;
      } else {
        slideIndex++;
      }

      if (slides.length < 10) {
        current.textContent = `0${slideIndex}`;
      } else {
        current.textContent = slideIndex;
      }

      dots.forEach(dot => (dot.style.backgroundColor = '#ffffff'));
      dots[slideIndex - 1].style.backgroundColor = '#D2B183';
    });

    prev.addEventListener('click', () => {
      if (offset == 0) {
        offset = +width.slice(0, width.length - 2) * (slides.length - 1);
      } else {
        offset -= +width.slice(0, width.length - 2);
      }

      slidesField.style.transform = `translateX(-${offset}px)`;

      if (slideIndex == 1) {
        slideIndex = slides.length;
      } else {
        slideIndex--;
      }

      if (slides.length < 10) {
        current.textContent = `0${slideIndex}`;
      } else {
        current.textContent = slideIndex;
      }

      dots.forEach(dot => (dot.style.backgroundColor = '#ffffff'));
      dots[slideIndex - 1].style.backgroundColor = '#D2B183';
    });

    dots.forEach(dot => {
      dot.addEventListener('click', e => {
        const slideTo = e.target.getAttribute('data-slide-to');

        slideIndex = slideTo;
        offset = +width.slice(0, width.length - 2) * (slideTo - 1);

        slidesField.style.transform = `translateX(-${offset}px)`;

        if (slides.length < 10) {
          current.textContent = `0${slideIndex}`;
        } else {
          current.textContent = slideIndex;
        }

        dots.forEach(dot => (dot.style.backgroundColor = '#ffffff'));
        dots[slideIndex - 1].style.backgroundColor = '#D2B183';
      });
    });
  })();

  //--------------------------before-after
  (function compare() {
    const slider = document.querySelector('.compare__slider');
    const before = document.querySelector('.compare__before-image');
    const beforeImage = before.querySelector('.compare__img');
    const after = document.querySelector('.compare__after-image');
    const afterImage = after.querySelector('.compare__img');
    const resizer = document.querySelector('.resizer');

    let active = false;

    let width = slider.offsetWidth;
    beforeImage.style.width = width + 'px';
    afterImage.style.width = width + 'px';
    resizer.style.height


    //Adjust width of image on resize
    window.addEventListener('resize', function () {
      let width = slider.offsetWidth;
      beforeImage.style.width = width + 'px';
      afterImage.style.width = width + 'px';
    });

    resizer.addEventListener('mousedown', function () {
      active = true;
      resizer.classList.add('resize');
    });

    document.body.addEventListener('mouseup', function () {
      active = false;
      resizer.classList.remove('resize');
    });

    document.body.addEventListener('mouseleave', function () {
      active = false;
      resizer.classList.remove('resize');
    });

    document.body.addEventListener('mousemove', function (e) {
      if (!active) return;
      let x = e.pageX;
      x -= slider.getBoundingClientRect().left;
      slideIt(x);
      pauseEvent(e);
    });

    resizer.addEventListener('touchstart', function () {
      active = true;
      resizer.classList.add('resize');
    });

    document.body.addEventListener('touchend', function () {
      active = false;
      resizer.classList.remove('resize');
    });

    document.body.addEventListener('touchcancel', function () {
      active = false;
      resizer.classList.remove('resize');
    });

    //calculation for dragging on touch devices
    document.body.addEventListener('touchmove', function (e) {
      if (!active) return;
      let x;

      let i;
      for (i = 0; i < e.changedTouches.length; i++) {
        x = e.changedTouches[i].pageX;
      }

      x -= slider.getBoundingClientRect().left;
      slideIt(x);
      pauseEvent(e);
    });

    function slideIt(x) {
      let transform = Math.max(0, Math.min(x, slider.offsetWidth));
      before.style.width = transform + 'px';
      resizer.style.left = transform - 0 + 'px';
    }

    //stop divs being selected.
    function pauseEvent(e) {
      if (e.stopPropagation) e.stopPropagation();
      if (e.preventDefault) e.preventDefault();
      e.cancelBubble = true;
      e.returnValue = false;
      return false;
    }
  })();

  //----------------------------------------Video
  (function video() {
    const video = document.querySelector('.player__video'),
      rangeTime = document.querySelector('.player__range-time'),
      rangeVolume = document.querySelector('.player__range-volume'),
      playButton = document.querySelector('.player__play-button'),
      expandButton = document.querySelector('.player__expand-button'),
      volumeButton = document.querySelector('.player__volume-button'),
      playButtonWrapper = document.querySelector('.player__wrapper');

    playButtonWrapper.addEventListener('click', () => {
      playButtonWrapper.classList.remove('player__wrapper-before');
      playButton.src = 'assets/svg/stop.svg';
      video.play();
    });

    video.addEventListener('click', () => {
      playButtonWrapper.classList.add('player__wrapper-before');
      playButton.src = 'assets/svg/play.svg';
      video.pause();
    });

    video.volume = 0.5;
    volumeButton.addEventListener('click', e => {
      if (video.muted) {
        video.muted = false;
        e.target.src = 'assets/svg/volume.svg';
        rangeVolume.value = video.volume || 0.5;
        video.volume = rangeVolume.value;
      } else {
        video.muted = true;
        e.target.src = 'assets/svg/novolume.svg';
        rangeVolume.value = 0;
      }
    });

    playButton.addEventListener('click', e => {
      if (video.paused) {
        video.play();
        playButtonWrapper.classList.remove('player__wrapper-before');
        playButton.src = 'assets/svg/stop.svg';
      } else {
        video.pause();
        playButtonWrapper.classList.add('player__wrapper-before');
        playButton.src = 'assets/svg/play.svg';
      }
    });

    expandButton.addEventListener('click', () => {
      video.requestFullscreen();
    });

    rangeTime.setAttribute('min', 0);
    video.addEventListener('loadedmetadata', function () {
      rangeTime.setAttribute('max', video.duration);
      rangeTime.setAttribute('value', video.duration * 0.54);
      runnableTrack();
    });

    rangeTime.addEventListener('input', function () {
      video.currentTime = rangeTime.value;
    });

    rangeTime.addEventListener(
      'input',
      function () {
        video.currentTime = rangeTime.value;
      },
      false,
    );

    function runnableTrack() {
      const input = document.querySelectorAll('input[type="range"]');
      input.forEach(input => {
        function setBackgroundSize(input) {
          input.style.setProperty('--background-size', `${getBackgroundSize(input)}%`);
        }

        setBackgroundSize(input);

        input.addEventListener('input', () => setBackgroundSize(input));

        function getBackgroundSize(input) {
          const min = +input.min || 0;
          const max = +input.max || 100;
          const value = +input.value;

          const size = ((value - min) / (max - min)) * 100;

          return size;
        }
      });
    }
    runnableTrack();

    video.addEventListener('playing', () => {
      setInterval(() => {
        rangeTime.value = video.currentTime;
        runnableTrack();
      }, 10);
    });

    video.addEventListener(
      'ended',
      function () {
        video.currentTime = 0;
        rangeTime.value = 0;
        video.load();
        playButton.src = 'assets/svg/play.svg';
      },
      false,
    );

    rangeVolume.addEventListener(
      'input',
      function () {
        video.muted = false;
        video.volume = rangeVolume.value;
        if (video.volume == 0) {
          volumeButton.src = 'assets/svg/novolume.svg';
          video.muted = true;
        } else {
          volumeButton.src = 'assets/svg/volume.svg';
          video.muted = false;
        }
      },
      false,
    );
  })();
  // new Splide

  // new Splide('.splide', {
  //   arrowPath: '../assets/video/arrow.svg',
  //   type: 'loop',
  //   perPage: 3,
  //   focus: 'center',
  // }).mount();

  (function numberInput() {
    document.querySelectorAll('.number-input__minus').forEach(i =>
      i.addEventListener('click', e => {
        e.target.nextElementSibling.stepDown();
      }),
    );

    document.querySelectorAll('.number-input__plus').forEach(i =>
      i.addEventListener('click', e => {
        e.target.previousElementSibling.stepUp();
      }),
    );
  })();

  //------ripple effect

  (function buttonClick() {
    let btn = document.querySelector('.ripple');
    function ripple(e) {
      e.preventDefault();
      let posX = this.offsetLeft;
      let posY = this.offsetTop;
      let buttonWidth = this.offsetWidth;
      let buttonHeight = this.offsetHeight;

      let ripple = document.createElement('span');
      ripple.classList.add('ripple__span');

      this.appendChild(ripple);

      if (buttonWidth >= buttonHeight) {
        buttonHeight = buttonWidth;
      } else {
        buttonWidth = buttonHeight;
      }

      var x = e.pageX - posX - buttonWidth / 2;
      var y = e.pageY - posY - buttonHeight / 2;

      ripple.style.width = `${buttonWidth}px`;
      ripple.style.height = `${buttonHeight}px`;
      ripple.style.top = `${y}px`;
      ripple.style.left = `${x}px`;

      ripple.classList.add('rippleAnimation');

      setTimeout(() => {
        this.removeChild(ripple);
      }, 1000);
    }

    btn.addEventListener('click', ripple);
  })();

  createModal('a-nav', true,true);
  createModal('reservation');

  //-------modal
  function createModal(elementName, scroolBehavior=false, changeTrigger=false) {
    const modalTrigger = document.querySelectorAll(`[data-${elementName}][data-modal]`),
      modal = document.querySelector(`[data-${elementName}][data-modal-window]`),
      modalContainer = document.querySelector(`[data-${elementName}].modal__container`),
      modalCloseBtn = document.querySelector(`[data-${elementName}][data-close]`);

    modalTrigger.forEach(btn => {
      btn.addEventListener('click', ()=>changeTrigger&&btn.classList.contains('data-close')?hideModal():showModal());
    });

    if(modalCloseBtn) modalCloseBtn.addEventListener('click', hideModal);

    modal.addEventListener('click', e => {
      if (e.target === modal) {
        hideModal();
      }
    });
    document.addEventListener('keydown', e => {
      if (e.code == 'Escape' && modal.classList.contains('show')) {
        hideModal();                                                                              
      }
    });

  //---------------adaptive nav
  function changeModalTrigger(){
    const trigger=document.querySelector(`[data-${elementName}][data-trigger]`),
          img=document.querySelector(`[data-${elementName}][data-trigger-image]`)
      if(trigger.classList.contains('data-open')){
        img.src='assets/svg/nav-close.svg';
        trigger.classList.toggle('data-open');
        trigger.classList.toggle('data-close');
      } else{
        img.src='assets/svg/nav-open.svg';
        trigger.classList.toggle('data-open');
        trigger.classList.toggle('data-close');
      }
  };

    function showModal() {
      modal.classList.add('show');
      modalContainer.classList.add('fadeIn');
      modal.classList.remove('hide');
      modalContainer.classList.remove('fadeOut');
      if(scroolBehavior) document.body.style.overflow = 'hidden';
      if(changeTrigger) changeModalTrigger();
      if(elementName=='a-nav') document.querySelector('.welcome__info').classList.add='welcome__info_md_hide';
    }

    function hideModal() {
      modalContainer.classList.remove('fadeIn');
      modalContainer.classList.add('fadeOut');
      setTimeout(() => {
        modal.classList.add('hide');
        modal.classList.remove('show');
      }, 1000);
      if(scroolBehavior) document.body.style.overflow = '';
      if(changeTrigger) changeModalTrigger();
      if(elementName=='a-nav') document.querySelector('.welcome__info').classList.remove='welcome__info_md_hide';
    }

  };



  //----------------------gallery
  (function appendGalleryImages() {
    const gallery = document.querySelector('.picture__inner');
    let random = severalRandom(1, 15, 15);
    for (let i = 0; i < 15; i++) {
      let img = document.createElement('img');
      img.classList.add('picture__item');
      img.setAttribute('alt', 'picture');
      img.src = `assets/img/galery/galery${random[i]}.jpg`;
      gallery.append(img);
    }

    function severalRandom(min, max, num) {
      let i,
        arr = [],
        res = [];

      for (i = min; i <= max; i++) arr.push(i);
      for (i = 0; i < num; i++) res.push(arr.splice(Math.floor(Math.random() * arr.length), 1)[0]);
      return res;
    }
  })();
});
